Setup :
LDI $0, R0 # RegZero
LDI $0, R2

STA @HEX0, R0 #Limpando os 7 segmentos
STA @HEX1, R0
STA @HEX2, R0
STA @HEX3, R0
STA @HEX4, R0
STA @HEX5, R0

STA @LEDR7, R0
STA @LEDR8, R0
STA @LEDR9, R0

STA @UNI, R0 
STA @DEC, R0
STA @CEN, R0

STA @CLR0, R0 #Limpar KEY0
STA @CLRR, R0 #Limpar FPGA_RESET

LDI $1, R1
STA @VAR1, R1  #Inicializando constante com 1
LDI $10, R1
STA @VAR10, R1 #Inicializando constante com 10
STA @ZERO, R0  #Inicializando constante com 0
STA @COUNT, R0 #Inicia contador com 0

Loop :
LDA @FPGA_RESET, R2 #Le FPGA_RESET e escreve em R2
CEQ @VAR1, R2 #Compara FPGA_RESET com 1
JEQ @Setup #Desvia para o inicio

LDA @KEY0, R1 #Le KEY0 e escreve em R1
CEQ @ZERO, R1 #Compara KEY0 com 0
JEQ @Loop #Se nao apertou o KEY0 volta

JSR @Incrementa #Se apertou vai para Incrementa
JMP @Escreve #Pula para escreve

Incrementa :
STA @CLR0, R0 #Limpa KEY0
LDA @UNI, R1 #Carrega o valor da unidade 
ADDI $1, R1 #Soma 1 com valor de R1 e salva em R1
CEQ @VAR10, R1 #Compara 10 com o valor de R1
JEQ @IncDec #Se R1 == 10 pula
STA @UNI, R1 #Se nao escreve na unidade
RET

IncDec :
STA @UNI, R0 #zera a unidade
LDA @DEC, R1 #Carrega o valor da dezena
ADDI $1, R1 #Soma 1 com valor de R1 e salva em R1
CEQ @VAR10, R1 #Compara 10 com o valor de R1
JEQ @IncCen #Se R1 == 10 pula
STA @DEC, R1 #Se nao escreve na dezena
RET

IncCen :
STA @DEC, R0 #zera a dezena
LDA @CEN, R1 #Carrega o valor da centena
ADDI $1, R1 #Soma 1 com valor de R1 e salva em R1
CEQ @VAR10, R1 #Compara 10 com o valor de R1
JEQ @IncMil #Se R1 == 10 pula
STA @CEN, R1 #Se nao escreve na centena
RET

IncMil :
STA @DEC, R0 #zera a dezena
RET

Escreve :
LDA @UNI, R1 #Carrega acumulador com valor da unidade
STA @HEX0, R1 #Carrega unidade no HEX0
LDA @DEC, R1 #Carrega acumulador com valor da dezena
STA @HEX1, R1 #Carrega dezena no HEX1
LDA @CEN, R1 #Carrega acumulador com valor da centena
STA @HEX2, R1 #Carrega centena no HEX2

JMP @Loop #Reiniciar Loop

